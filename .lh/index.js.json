{
    "sourceFile": "index.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 3,
            "patches": [
                {
                    "date": 1759121319414,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1759121571178,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,45 +1,37 @@\n-const express = require('express');\r\n-const cors = require('cors');\r\n-const multer = require('multer');\r\n-const path = require('path');\r\n+const express = require(\"express\");\r\n+const cors = require(\"cors\");\r\n+const multer = require(\"multer\");\r\n+const path = require(\"path\");\r\n \r\n-\r\n const app = express();\r\n app.use(cors());\r\n-app.use(express.static(path.join(__dirname, 'public')));\r\n \r\n+// phục vụ file tĩnh trong /public (style.css, index.html,…)\r\n+app.use(\"/public\", express.static(path.join(__dirname, \"public\")));\r\n \r\n-// Setup multer: lưu file tạm vào /uploads\r\n-const storage = multer.diskStorage({\r\n-destination: (req, file, cb) => cb(null, 'uploads/'),\r\n-filename: (req, file, cb) => cb(null, file.originalname)\r\n+// trang chủ hiển thị form upload\r\n+app.get(\"/\", (req, res) => {\r\n+  res.sendFile(path.join(__dirname, \"index.html\"));\r\n });\r\n-const upload = multer({ storage });\r\n \r\n+// cấu hình multer dùng memoryStorage\r\n+const upload = multer({ storage: multer.memoryStorage() });\r\n \r\n-// Root\r\n-app.get('/', (req, res) => {\r\n-res.sendFile(path.join(__dirname, 'public', 'index.html'));\r\n-});\r\n+// endpoint xử lý upload\r\n+app.post(\"/api/fileanalyse\", upload.single(\"upfile\"), (req, res) => {\r\n+  if (!req.file) {\r\n+    return res.status(400).json({ error: \"No file uploaded\" });\r\n+  }\r\n \r\n-\r\n-// POST /api/fileanalyse or /api/fileanalyse\r\n-app.post('/api/fileanalyse', upload.single('upfile'), (req, res) => {\r\n-if (!req.file) return res.status(400).json({ error: 'No file uploaded' });\r\n-\r\n\\ No newline at end of file\n-\r\n-const { originalname, mimetype, size } = req.file;\r\n-res.json({ name: originalname, type: mimetype, size });\r\n+  const { originalname, mimetype, size } = req.file;\r\n+  res.json({\r\n+    name: originalname,\r\n+    type: mimetype,\r\n+    size: size\r\n+  });\r\n });\r\n \r\n-\r\n-// also support legacy route\r\n-app.post('/api/filemeta', upload.single('upfile'), (req, res) => {\r\n-if (!req.file) return res.status(400).json({ error: 'No file uploaded' });\r\n-const { originalname, mimetype, size } = req.file;\r\n-res.json({ name: originalname, type: mimetype, size });\r\n+const PORT = process.env.PORT || 3000;\r\n+app.listen(PORT, () => {\r\n+  console.log(`Server running on port ${PORT}`);\r\n });\r\n-\r\n-\r\n-const PORT = process.env.PORT || 3000;\r\n-app.listen(PORT, () => console.log(`Server running on port ${PORT}`));\n"
                },
                {
                    "date": 1759121667487,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,37 @@\n+const express = require(\"express\");\r\n+const cors = require(\"cors\");\r\n+const multer = require(\"multer\");\r\n+const path = require(\"path\");\r\n+\r\n+const app = express();\r\n+app.use(cors());\r\n+\r\n+// phục vụ file tĩnh trong /public (style.css, index.html,…)\r\n+app.use(\"/public\", express.static(path.join(__dirname, \"views\")));\r\n+\r\n+// trang chủ hiển thị form upload\r\n+app.get(\"/\", (req, res) => {\r\n+  res.sendFile(path.join(__dirname, \"index.html\"));\r\n+});\r\n+\r\n+// cấu hình multer dùng memoryStorage\r\n+const upload = multer({ storage: multer.memoryStorage() });\r\n+\r\n+// endpoint xử lý upload\r\n+app.post(\"/api/fileanalyse\", upload.single(\"upfile\"), (req, res) => {\r\n+  if (!req.file) {\r\n+    return res.status(400).json({ error: \"No file uploaded\" });\r\n+  }\r\n+\r\n+  const { originalname, mimetype, size } = req.file;\r\n+  res.json({\r\n+    name: originalname,\r\n+    type: mimetype,\r\n+    size: size\r\n+  });\r\n+});\r\n+\r\n+const PORT = process.env.PORT || 3000;\r\n+app.listen(PORT, () => {\r\n+  console.log(`Server running on port ${PORT}`);\r\n+});\r\n"
                },
                {
                    "date": 1759121709942,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,13 +6,13 @@\n const app = express();\r\n app.use(cors());\r\n \r\n // phục vụ file tĩnh trong /public (style.css, index.html,…)\r\n-app.use(\"/public\", express.static(path.join(__dirname, \"views\")));\r\n+app.use(\"/public\", express.static(path.join(__dirname, \"public\")));\r\n \r\n // trang chủ hiển thị form upload\r\n app.get(\"/\", (req, res) => {\r\n-  res.sendFile(path.join(__dirname, \"index.html\"));\r\n+  res.sendFile(path.join(__dirname, \"views/index.html\"));\r\n });\r\n \r\n // cấu hình multer dùng memoryStorage\r\n const upload = multer({ storage: multer.memoryStorage() });\r\n"
                }
            ],
            "date": 1759121319414,
            "name": "Commit-0",
            "content": "const express = require('express');\r\nconst cors = require('cors');\r\nconst multer = require('multer');\r\nconst path = require('path');\r\n\r\n\r\nconst app = express();\r\napp.use(cors());\r\napp.use(express.static(path.join(__dirname, 'public')));\r\n\r\n\r\n// Setup multer: lưu file tạm vào /uploads\r\nconst storage = multer.diskStorage({\r\ndestination: (req, file, cb) => cb(null, 'uploads/'),\r\nfilename: (req, file, cb) => cb(null, file.originalname)\r\n});\r\nconst upload = multer({ storage });\r\n\r\n\r\n// Root\r\napp.get('/', (req, res) => {\r\nres.sendFile(path.join(__dirname, 'public', 'index.html'));\r\n});\r\n\r\n\r\n// POST /api/fileanalyse or /api/fileanalyse\r\napp.post('/api/fileanalyse', upload.single('upfile'), (req, res) => {\r\nif (!req.file) return res.status(400).json({ error: 'No file uploaded' });\r\n\r\n\r\nconst { originalname, mimetype, size } = req.file;\r\nres.json({ name: originalname, type: mimetype, size });\r\n});\r\n\r\n\r\n// also support legacy route\r\napp.post('/api/filemeta', upload.single('upfile'), (req, res) => {\r\nif (!req.file) return res.status(400).json({ error: 'No file uploaded' });\r\nconst { originalname, mimetype, size } = req.file;\r\nres.json({ name: originalname, type: mimetype, size });\r\n});\r\n\r\n\r\nconst PORT = process.env.PORT || 3000;\r\napp.listen(PORT, () => console.log(`Server running on port ${PORT}`));"
        }
    ]
}